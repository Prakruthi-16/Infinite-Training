
USE AssignmentDB

--1.Write a T-SQL Program to find the factorial of a given number
GO
DECLARE @Number INT = 8;
DECLARE @Factorial INT = 1;
DECLARE @Counter INT = 1;

WHILE @Counter <= @Number
BEGIN
    SET @Factorial = @Factorial * @Counter;
    SET @Counter = @Counter + 1;
END

PRINT 'Factorial of ' + CAST(@Number AS VARCHAR(10)) + ' is: ' + CAST(@Factorial AS VARCHAR(20));






--2.Create a stored procedure to generate multiplication table that accepts a number and generates up to a given number. 

CREATE OR ALTER PROC GenerateMultiplicationTable
    @number INT
AS
BEGIN
    DECLARE @multiplier INT = 1;
    DECLARE @result INT;

    WHILE @multiplier <= 10
    BEGIN
        SET @result = @number * @multiplier;
        PRINT CONCAT(@number, ' * ', @multiplier, ' = ', @result);
        SET @multiplier = @multiplier + 1;
    END
END;
EXEC GenerateMultiplicationTable @number = 2;

---3.

-- Create the students table

CREATE TABLE students (
 Sid INT PRIMARY KEY,
 Sname VARCHAR(50)
);


-- Insert data into the students table

INSERT INTO students (Sid, Sname) VALUES
(1, 'Jack'),
(2, 'Rithvik'),
(3, 'Jaspreeth'),
(4, 'Praveen'),
(5, 'Bisa'),
(6, 'Suraj');


-- Create the marks table

CREATE TABLE marks (
 Mid INT PRIMARY KEY,
 Sid INT,
 Score INT,
FOREIGN KEY (Sid) REFERENCES students(Sid)
);


-- Insert data into the marks table

INSERT INTO marks (Mid, Sid, Score) VALUES

(1, 1, 23),
(2, 6, 95),
(3, 4, 98),
(4, 2, 17),
(5, 3, 53),
(6, 5, 13);


-- Query to calculate the status of each student

SELECT 
    s.Sid,
    s.Sname,
    COALESCE(m.Score, 0) AS Score,
    CASE 
        WHEN COALESCE(m.Score, 0) >= 50 THEN 'Pass'
        ELSE 'Fail'
    END AS Status
FROM
students s
LEFT JOIN 
marks m ON s.Sid = m.Sid
ORDER BY 
s.Sid;
